name: Pipeline deployment

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  python_backend:
    runs-on: ubuntu-18.04
    env:
      ML_TEST_TAG: activelearning_ml:test
      API_TEST_TAG: activelearning_api:test
      ML_ENDPOINT: train_and_predict/
      API: api/
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8' 
          architecture: 'x64'
          cache: 'pip'
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          max-line-length: "120"
          path: .
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and export ML endpoint to Docker
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.ML_ENDPOINT }}
          load: true
          tags: ${{ env.ML_TEST_TAG }}
          outputs: type=docker,dest=/tmp/activelearning_ml.tar
      # - name: Build and export API to Docker
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ${{ env.API }}
      #     load: true
      #     tags: ${{ env.API_TEST_TAG }}
      #     outputs: type=docker,dest=/tmp/activelearning_api.tar
      # - name: Test built image
      #   run:
      #     docker run ${{ env.ML_TEST_TAG }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: myimage
          path: /tmp/activelearning_ml.tar
      - name: Build and push
        if: ${{ github.event_name == 'push' }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.ML_ENDPOINT }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: activelearning_ml:latest

  # web_app:
  #   runs-on: ubuntu-18.04
  #   needs: python_backend
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: myimage
  #         path: /tmp
  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/myimage.tar
  #         docker image ls -a
  #     - name: e2e tests
  #       uses: cypress-io/github-action@v2
  #       with:
  #         command: npm run test
  #         start: npm start
  #         wait-on: http://localhost:8080


      

