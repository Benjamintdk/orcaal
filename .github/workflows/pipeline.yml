name: Pipeline deployment

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  ml_endpoint:
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: train_and_predict/
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8' 
          architecture: 'x64'
          cache: 'pip'
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          max-line-length: "100"
          path: "train_and_predict/"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
      - name: Test built image
        run: |
          docker run --rm ${{ env.TEST_TAG }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: activelearning_ml:latest

  
  # api:
  #   runs-on: ubuntu-18.04
  #   needs: ml_endpoint
  #   defaults:
  #     run:
  #       working-directory: api/
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.8' 
  #         architecture: 'x64'
  #         cache: 'pip'
  #     - name: Install dependencies
  #       run: pip install -r requirements.txt
  #     - name: Lint with flake8
  #       run: |
  #         pip install flake8
  #         flake8 .
  #     # - name: Test python scripts # to-do because scripts are a bit outdated
  #     #   run: python -m pytest
  #     - name: Build with docker

  # web_app:
  #   runs-on: ubuntu-18.04
  #   needs: [ml_endpoint, api]
  #   defaults:
  #     run:
  #       working-directory: webapp/
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - name: Install dependencies
  #       run: npm install
  #     - name: e2e tests
  #       uses: cypress-io/github-action@v2
  #       with:
  #         command: npm run test
  #         start: npm start
  #         wait-on: http://localhost:8080


      

